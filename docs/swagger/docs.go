// Package swagger Code generated by swaggo/swag. DO NOT EDIT
package swagger

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/health": {
            "get": {
                "description": "Check if the API and its dependencies are healthy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/scans": {
            "get": {
                "description": "Get a list of all scans with their status and grades",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scans"
                ],
                "summary": "List all scans",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.ScanListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Submit a target hostname or IP address for TLS/SSL scanning",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scans"
                ],
                "summary": "Submit a new scan",
                "parameters": [
                    {
                        "description": "Scan target",
                        "name": "scan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.ScanRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/main.ScanResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/scans/{id}": {
            "get": {
                "description": "Retrieve the result of a specific scan by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scans"
                ],
                "summary": "Get scan result",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Scan ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.ScanResultResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/stats": {
            "get": {
                "description": "Get scan statistics including total scans, queue length, etc.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stats"
                ],
                "summary": "Get statistics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.ScanListItem": {
            "type": "object",
            "properties": {
                "comments": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "grade": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "score": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                }
            }
        },
        "main.ScanListResponse": {
            "type": "object",
            "properties": {
                "scans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.ScanListItem"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "main.ScanRequest": {
            "description": "Request body for submitting a new TLS/SSL scan",
            "type": "object",
            "required": [
                "target"
            ],
            "properties": {
                "check_sslv3": {
                    "description": "Enable deep scan with SSL v3 detection using raw sockets\n@example false",
                    "type": "boolean",
                    "example": false
                },
                "comments": {
                    "description": "Optional comments for tracking (max 100 chars)\n@example \"Ticket #12345\"",
                    "type": "string",
                    "maxLength": 100,
                    "example": "Quarterly security audit"
                },
                "priority": {
                    "description": "Scan priority (1-10, higher = more priority)\n@example 5",
                    "type": "integer",
                    "example": 5
                },
                "target": {
                    "description": "Target hostname or IP address to scan (required)\n@example example.com or 192.168.1.1:8443",
                    "type": "string",
                    "example": "example.com"
                }
            }
        },
        "main.ScanResponse": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "queue_position": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "main.ScanResultResponse": {
            "type": "object",
            "properties": {
                "certificate_days_remaining": {
                    "type": "integer"
                },
                "certificate_expires_at": {
                    "type": "string"
                },
                "certificate_grade": {
                    "type": "string"
                },
                "certificate_issuer": {
                    "type": "string"
                },
                "certificate_key_size": {
                    "type": "integer"
                },
                "certificate_key_type": {
                    "type": "string"
                },
                "certificate_score": {
                    "type": "integer"
                },
                "cipher_strength_score": {
                    "type": "integer"
                },
                "comments": {
                    "type": "string"
                },
                "connection_type": {
                    "type": "string"
                },
                "grade": {
                    "type": "string"
                },
                "grade_degradations": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": true
                    }
                },
                "id": {
                    "type": "string"
                },
                "key_exchange_score": {
                    "type": "integer"
                },
                "protocol_grade": {
                    "type": "string"
                },
                "protocol_score": {
                    "type": "integer"
                },
                "protocol_support_score": {
                    "type": "integer"
                },
                "result": {
                    "type": "object"
                },
                "score": {
                    "type": "integer"
                },
                "service_type": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "vulnerabilities": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": true
                    }
                },
                "weak_ciphers": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": true
                    }
                },
                "weak_protocols": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": true
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "localhost:8000",
	BasePath:         "/api/v1",
	Schemes:          []string{"http", "https"},
	Title:            "TLS Scanner Portal API",
	Description:      "Request body for submitting a new TLS/SSL scan",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
